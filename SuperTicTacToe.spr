SPR# 状 P Open Close ver     Type  概要
-------------------------------------------------------------------------------
0001 ◎ C 12/27 12/27 0.001│ToDo│プロジェクト作成
0002 ◎ C 12/27 12/27 0.001│ToDo│背景矩形・タイトルバー設置
0003 ◎ C 12/27 12/27 0.001│ToDo│タイトルバー：Label設置・タイトル表示
0004 ◎ C 12/27 12/27 0.001│ToDo│盤面背景表示
0005 ◎ C 12/27 12/27 0.001│ToDo│上部・左部に座標（a-i, 1-9）表示
0006 ● C 12/27            │ToDo│タイトルバー：バージョン表示
0007 ◎ C 12/27 12/27 0.001│ToDo│盤面タイルマップ設置
0008 ◎ C 12/27 12/27 0.001│ToDo│大きいマルバツ用タイルマップ設置
0009 ◎ C 12/27 12/30 0.001│ToDo│【Start Game】ボタン設置
0010 ◎ C 12/27 12/30 0.001│ToDo│【Start Game】ボタン押下→人間 vs ランダム
0011 ◎ C 12/27 12/28 0.001│ToDo│着手可能ローカルボードを示すための盤面背景タイルマップ設置
0012 ◎ C 12/27 12/28 0.001│ToDo│盤面グリッド描画用レイヤー追加
0013 ◎ C 12/27 01/10 0.001│ToDo│盤面上にマルバツ手番（とりあえず ランダムのみ）表示
0014 ● C 12/27            │ToDo│Global シーン追加
0015 ◎ C 12/27 12/28 0.001│ToDo│盤面下にメッセージラベル設置
0016 ◎ C 12/27 12/28 0.001│ToDo│盤面初期化関数 init_board() 実装
0017 ◎ C 12/27 12/28 0.001│ToDo│指定位置着手関数 put(x, y, color) 実装
0018 ◎ C 12/29 12/29 0.001│ToDo│盤面クリックで着手可能に
0019 ◎ C 12/29 12/29 0.001│ToDo│手番表示更新
0020 ◎ C 12/29 12/29 0.001│ToDo│ローカル内で三目並んだ場合はグローバルボードを更新
0021 ◎ C 12/29 12/29 0.001│ToDo│すでに着手済み箇所には着手不可に
0022 ◎ C 12/29 12/29 0.001│ToDo│着手可能ローカルボードかのチェック
0023 ◎ C 12/29 12/29 0.001│問題│すでに３目並んでいるグローバルボード状態を上書きできてしまう
0024 ◎ C 12/29 12/30 0.001│ToDo│グローバルボードで３目並んだ場合の処理
0025 ◎ C 12/29 12/29 0.001│ToDo│先手番：ランダムプレイヤーにしてみる
0026 ◎ C 12/29 12/29 0.001│問題│初手：番外をクリックするとそこに着手されてしまう
0027 ◎ C 12/29 12/29 0.001│問題│ランダムAI：すでに着手済みの箇所に着手する場合がある
0028 ◎ C 12/29 12/29 0.001│問題│AIがローカルボードで３目並べてもグローバルボードがＸにならない
0029 ◎ C 12/29 01/10 0.001│ToDo│人間・AI着手後の処理を関数化
0030 ◎ C 12/30 12/30 0.001│ToDo│勝敗判定
0031 ◎ C 12/30 01/04 0.001│ToDo│すべて埋まっているローカルボードに送られた場合は、すべてのローカルボードに着手可能に
0032 ◎ C 12/30 01/04 0.001│ToDo│すべて三目並んでいるローカルボードに送られた場合は、すべてのローカルボードに着手可能に
0033 ● C 12/30            │ToDo│初期メッセージ：「【Start Game】を押してください。」
0034 ◎ C 12/31 12/31 0.001│ToDo│各ローカルボード内の着手数更新
0035 ◎ C 12/31 01/01 0.001│ToDo│ＯＸプレイヤーパネル設置
0036 ◎ C 12/31 01/03 0.001│ToDo│ＯＸプレイヤーパネル：手番の方のアンダーラインのみ表示
0037 ◎ C 01/03 01/03 0.001│ToDo│ＯＸプレイヤーパネル：OptionButton 設置
0038 ◎ C 01/04 01/04 0.001│ToDo│大戦中はＯＸプレイヤーパネル OptionButton ディセーブル
0039 ◎ C 01/04 01/04 0.001│ToDo│人間 vs 人間 対応
0040 ◎ C 01/04 01/04 0.001│ToDo│直前に着手されたセルを強調
0041 ◎ C 01/04 01/04 0.001│ToDo│ランダム vs ランダム対応
0042 ◎ C 01/04 01/05 0.001│ToDo│勝敗メッセージ：ＯＸ勝者を表示
0043 ◎ C 01/04 01/04 0.001│問題│ランダム vs ランダム対戦でクラッシュする場合がある
0044 ◎ C 01/04 01/05 0.001│問題│ランダムAIが盤面外に打つ場合がある？
0045 ◎ C 01/04 01/10 0.001│ToDo│引き分け判定
0046 ◎ C 01/05 01/10 0.001│ToDo│1手先読みAI追加
0047 ◎ C 01/05 01/05 0.001│ToDo│3セルの着手評価値テーブル追加
0048 ◎ C 01/05 01/05 0.001│ToDo│盤面クラス（Board）追加
0049 ◎ C 01/05 01/05 0.001│ToDo│Board::print() 実装
0050 ◎ C 01/05 01/06 0.001│ToDo│Board::put(x, y, col) 実装
0051 ◎ C 01/07 01/07 0.001│ToDo│Board::put(x, y, col)：３目並んだ場合はグローバルボードの当該セルに石を置く
0052 ◎ C 01/07 01/07 0.001│ToDo│Board::is_three_stones(x, y) 実装
0053 ◎ C 01/08 01/08 0.001│ToDo│Board::print()：座標値・ローカルボード区切り線表示
0054 ◎ C 01/09 01/09 0.001│ToDo│Board：ランダムプレイアウト可能に
0055 ◎ C 01/09 01/09 0.001│ToDo│Board::is_three_stones_global(gx : int, gy : int) 実装
0056 ◎ C 01/09 01/09 0.001│ToDo│Board > ランダムプレイアウト：勝敗引き分け判定
0057 ◎ C 01/09 01/09 0.001│ToDo│Board：１手読みAI実装
0058 ◎ C 01/09 01/09 0.001│ToDo│評価値テーブル：評価値のみの１次元配列に
0059 ◎ C 01/09 01/09 0.001│ToDo│Board::print()：直前着手箇所強調
0060 ◎ C 01/09 01/09 0.001│問題│すでに三目並んでいるローカルボードへの着手評価が高くなっている
0061 ◎ C 01/05 01/12 0.001│ToDo│GUI：Board AI をコールするよう修正
0062 ◎ C 01/05 01/12 0.001│ToDo│Board の状態からタイルマップセル設定
0063 ○ C 01/11            │問題│ゲーム中に、☓プレイヤーを変更可能
0064 ◎ C 01/11 01/11 0.001│問題│ゲームスタートしていないのに、○着手可能
0065 ● C 01/12            │ToDo│TileMap の設定は update_board_tilemaps() でのみ行う
0066 ◎ C 01/12 01/12 0.001│ToDo│Board １手読みAI：相手を確定済みローカルボードに送る場合は評価値を減らす
0067 ● C 01/12            │ToDo│終局判定：Board をコール
0068 ● C 01/12            │ToDo│Board １手読みAI：ローカルボードで三目並んだ場合、グローバルボードで連を評価
0069 ◎ C 01/12 01/13 0.001│ToDo│Start Game でない場合はマルバツパネル下部手番矩形を非表示に
0070 ◎ C 01/12 01/13 0.001│ToDo│Board １手読みAI：三目並んでしまうローカルボードに送る場合は評価値を減らす
0071 ◎ C 01/13 01/13 0.001│問題│ゲームスタート・ストップ時に手番矩形が表示・非表示されない
0072 ◎ C 01/13 01/13 0.001│問題│AI vs AI：終局時メッセージが不正
0073 ◎ C 01/13 01/13 0.001│問題│AI vs AI 終局時：スタート・ストップゲームボタンが【Stop Game】のまま
0074 ● C 01/13            │ToDo│【Continue】ボタン設置？
0075 ◎ C 01/13 01/13 0.001│ToDo│AI Level 1 同士で対戦すると (0, 0) に何度も打ち続ける
0076 ● C 01/13            │ToDo│Board：純粋モンテカルロAI 追加
0077 ● C 01/13            │ToDo│引き分け時：最終着手箇所強調位置不正（-1, -1 が強調される）
0078 ◎ C 01/13 01/14 0.001│ToDo│Board::put()：着手箇所・next_board・三目並んだか をスタックに積み、unput() 可能に
0079 ◎ C 01/13 01/13 0.001│問題│AI vs AI：終局しているのに着手が続いてしまう？
0080 ● C 01/13            │ToDo│Board::playout() 実装
0081 ◎ C 01/14 01/14 0.001│ToDo│直前着手位置は stack.back() の x, y を参照し、last_put_pos は削除
0082 ◎ C 01/14 01/14 0.001│ToDo│stack に積むアイテムを class 化
0083 ◎ C 01/14 01/14 0.001│ToDo│Board::eval() 実装
0084 ◎ C 01/14 01/17 0.001│ToDo│AI Depth_3 追加
0085 ◎ C 01/14 01/14 0.001│ToDo│Board::eval()：グローバルボード状態評価
0086 ◎ C 01/15 01/15 0.001│ToDo│Board::copy() 実装
0087 ● C 01/17            │問題│AI Depth 3：１手で勝てるのにそこに打たない（１手先でそれ以上先読みしないように）
0088 ● C 01/17            │問題│unput()：is_game_over が元に戻っていない
0089 ● C 01/17            │ToDo│終局後、再現可能に
0090 ● C 01/17            │ToDo│対局時、人間手番で Undo/Redo 可能に
0091 ◎ C 01/18 01/18 0.001│ToDo│AI Depth １：空白でない箇所に着手する場合がある
0092 ◎ C 01/22 01/22 0.001│ToDo│VS C++ プロジェクト追加
0093 ◎ C 01/22 01/22 0.001│ToDo│Board クラス追加
0094 ◎ C 01/22 01/22 0.001│ToDo│Board::print() 実装
0095 ◎ C 01/22 01/22 0.001│ToDo│Board：ローカル・グローバルボード変数・初期化
0096 ◎ C 01/22 01/22 0.001│ToDo│Board::print()：上辺に「ａ～ｉ」、左辺に「１～９」表示
0097 ◎ C 01/22 01/22 0.001│ToDo│Board::put(x, y, col) 実装
0098 ◎ C 01/22 01/22 0.001│ToDo│Board::put(x, y, col)：ローカルボードで三目並んだ場合はグローバルボード更新
0099 ◎ C 01/22 01/22 0.001│ToDo│Board::undo_put() 実装
0100 ● C 01/22            │ToDo│Board::put(x, y, col)：終局チェック
0101 ◎ C 01/22 01/22 0.001│ToDo│Board::put(x, y, col)：next_board 更新
0102 ◎ C 01/22 01/23 0.001│ToDo│Board::print()：最後に着手した箇所を表示
0103 ◎ C 01/23 01/23 0.001│ToDo│Board::sel_move_random() 実装
0104 ◎ C 01/23 01/23 0.001│ToDo│Board::is_game_over() 実装
0105 ◎ C 01/23 01/23 0.001│ToDo│Board::playout() 実装
0106 ● C 01/23            │ToDo│Board::playout(N) 実装
0107 ◎ C 01/29 01/31 0.001│ToDo│単なる三目並べもプロジェクトに追加
0108 ◎ C 01/31 01/31 0.001│ToDo│TicTacToe：Board クラス追加
0109 ◎ C 01/31 01/31 0.001│ToDo│Board::print() 実装
0110 ◎ C 01/31 01/31 0.001│ToDo│Board::print()：上辺に「abc」、左辺に「123」表示
0111 ◎ C 01/31 01/31 0.001│ToDo│Board::put(x, y, col) 実装
0112 ◎ C 01/31 02/01 0.001│ToDo│Board::put(x, y, col)：終局チェック
0113 ● C 01/31            │ToDo│Board::Board(const Board&) 実装
0114 ◎ C 02/01 02/01 0.001│ToDo│Board::sel_move_random() 実装
0115 ◎ C 02/02 02/02 0.001│ToDo│Board::playout() 実装
0116 ◎ C 02/02 02/02 0.001│ToDo│Board::put(x, y, col)：終局時勝者設定
0117 ◎ C 02/02 02/02 0.001│問題│三目並んでいるのに、終局と判定されないことがある
0118 ◎ C 02/02 02/02 0.001│ToDo│Board::playout(N) 実装
0119 ◎ C 02/02 02/02 0.001│ToDo│Board::sel_move_PMC() 純粋モンテカルロ法による着手決定
0120 ◎ C 02/02 02/02 0.001│問題│Board::sel_move_PMC()：モンテカルロ法計算結果があやしい
0121 ◎ C 02/02 02/02 0.001│問題│１個空き状態で？ sel_move_PMC() をコールするとクラッシュ
0122 ◎ C 02/02 02/02 0.001│問題│sel_move_PMC()：三目並ぶ箇所があるのにそこに打たないことがある
0123 ● C 02/02            │問題│sel_move_PMC()：相手に三目並ぶ箇所があるのに阻止する箇所に打たない
0124 ● C 02/02            │ToDo│盤面→Q table インデックス変換関数（対称系非対応）実装
0125 ● C 02/02            │ToDo│ミニマックス評価、勝負がついた状態：±1、割引率：0.9 ？
0126 ◎ C 02/02 02/02 0.001│ToDo│Board::undo_put() 実装
0127 ◎ C 02/02 02/03 0.001│ToDo│Board::find_make_three(Move& mv, char col) 実装
0128 ◎ C 02/03 02/03 0.001│ToDo│sel_move_MC3()：三目並ぶ手を優先するモンテカルロ法
0129 ◎ C 02/03 02/03 0.001│ToDo│Board::playout_random(bool) 実装
0130 ◎ C 02/03 02/04 0.001│問題│三目並び優先MC：相手が三目並ぶのを阻止しない場合がある
0131 ◎ C 02/03 02/04 0.001│ToDo│ランダム vs モンテカルロ法対戦勝敗計測
0132 ◎ C 02/04 02/04 0.001│ToDo│盤面→ハッシュ値計算関数実装
0133 ◎ C 02/04 02/05 0.001│ToDo│完全解析を行い 全s の v(s) 計算
0134 ◎ C 02/04 02/04 0.001│ToDo│ハッシュ関数：対称形考慮
0135 ◎ C 02/04 02/05 0.001│ToDo│対称形を排除して、生成可能局面をすべて unordered_map に格納
0136 ◎ C 02/04 02/04 0.001│問題│undo_put()：m_game_over を元に戻していない
0137 ◎ C 02/04 02/05 0.001│問題│完全解析結果が怪しげ
0138 ◎ C 02/04 02/05 0.001│ToDo│決着がついた状態：±1、N手で勝てる場合を γ^N とする
0139 ◎ C 02/04 02/05 0.001│ToDo│完全解析を用いたAI
0140 ◎ C 02/04 02/06 0.001│ToDo│CFR 学習・着手選択
0141 ◎ C 02/04 02/06 0.001│ToDo│Board::hash_asym() 実装（対称形非考慮）
0142 ● C 02/04            │問題│CFR 学習：後手番の場合の後悔値が不正になる？
0143 ◎ C 02/07 02/07 0.001│ToDo│Board::print_rtable()：盤面表示に後悔値も表示
0144 ◎ C 02/07 02/07 0.001│ToDo│% と & を間違えている
0145 ◎ C 02/08 02/08 0.001│ToDo│Board::print_rtable()：桁を揃える
0146 ● C 02/09            │ToDo│１手で勝てる場合、そこの後悔値を大きくした方がよい？
0147 ◎ C 02/13 02/13 0.001│ToDo│learn_MinMaxQ() 実装
0148 ◎ C 02/13 02/13 0.001│問題│learn_MinMaxQ()：☓の着手が正しく行われない？
0149 ◎ C 02/18 02/21 0.001│ToDo│超三目並べ：評価関数
0150 ● C 02/18            │ToDo│3x3 全パターン → 評価値をあらかじめ計算
0151 ● C 02/19            │ToDo│超三目並べ：3x3盤面クラス追加
0152 ◎ C 02/20 02/21 0.001│ToDo│三目並べ：評価関数
0153 ◎ C 02/21 02/21 0.001│ToDo│超三目並べ：1手読み＋評価関数 sel_move_Depth1() 実装
0154 ◎ C 02/21 02/21 0.001│ToDo│超三目並べ：depth読み＋評価関数 sel_move_MinMax(depth) 実装
0155 ◎ C 02/21 02/21 0.001│問題│sel_move_MinMax(depth)：☓が不必要に○の三目を許してしまう？
0156 ◎ C 02/21 02/22 0.001│ToDo│超三目並べ print()：着手箇所強調
0157 ◎ C 02/22 02/22 0.001│ToDo│超三目並べ：αβ探索実装
0158 ◎ C 02/22 02/23 0.001│問題│MinMax() と AlphaBeta() の最善手評価値が異なる場合がある？
									原因：sel_move_MinMax() をコールすると m_next_board の値が変わっている
0159 ● C 02/23            │ToDo│GDScript > Board クラス：石の値を ±1 に変更、シンボルも WHITE, BLACK に
0160 ◎ C 02/23 02/23 0.001│ToDo│sel_move_AlphaBeta()：for 文で着手位置を回す部分を共通化
0161 ◎ C 02/23 02/23 0.001│ToDo│alpha_beta()：for 文で着手位置を回す部分を共通化
0162 ◎ C 02/24 02/24 0.001│問題│AI同士の対戦を行うと、まだ空欄があるのに終局になることがある？
									原因：まだ空欄があるのにm_nput[] の合計が81になっている
									原因：sel_move_AlphaBeta() が Move(-1, -1) を返すことがある
0163 ● C 02/24            │ToDo│
0164 ● C 02/24            │ToDo│
0165 ● C 02/24            │ToDo│
0166 ● C 02/24            │ToDo│
0167 ● C 02/24            │ToDo│
0168 ● C 02/24            │ToDo│
0169 ● C 02/24            │ToDo│
0170 ● C 02/24            │ToDo│
